[tool.poetry]
name = "weather-provider-api"
version = "3.0.0-alpha1"
description = "Weather Provider API"
authors = ["Your Name <you@example.com>"]
license = "MPL2.0"
readme = "README.rst"

[tool.poetry.dependencies]
python = ">=3.11, <3.13"
fastapi = "^0.111.0"
loguru = "^0.7.2"
tomli = "^2.0.1"
starlette-prometheus = "^0.9.0"
slowapi = "^0.1.9"
uvicorn = "^0.29.0"
gunicorn = "^22.0.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
sphinx = "^7.2.6"
sphinx-rtd-theme = "^2.0.0"
pytest = "^8.1.1"
black = "^24.3.0"
ruff = "^0.3.4"
coverage = "^7.4.4"
myst-parser = "^2.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pylint."FORMAT"]
max-line-length = 120

[tool.pytest.ini_options]
testpaths = [
    "tests"
]

[tool.coverage.run]
branch = true

[tool.coverage.paths]
source = ["weather_provider_libraries"]

[tool.coverage.html]
directory = "docs/coverage_html_report"

[tool.black]
line-length = 120
target-version = ["py311", "py312"]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py311"
output-format = "github"
show-fixes = true
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "migrations"
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pydocstyle
    "D",
]
ignore = [
    # Missing docstring in public module
    "D100",
    # Missing docstring in public package
    "D104",
    #  `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible. Ignoring `one-blank-line-before-class`.
    "D203",
    # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible. Ignoring `multi-line-summary-second-line`.
    "D213",
]

[tool.ruff.lint.pydocstyle]
convention = "google"